package com.malware.authservice.core.usecase.admin;

import com.malware.authservice.core.port.in.RegisterAdminCommand;
import com.malware.authservice.data.domain.admin.Admin;
import com.malware.authservice.data.domain.admin.AdminRepository;
import com.malware.authservice.exception.MalformedCommandException;
import com.malware.authservice.exception.UserAlreadyExistsException;
import com.malware.authservice.exception.UserNotFoundException;
import com.malware.authservice.factory.ICommandMapper;
import org.springframework.stereotype.Service;

@Service
public class RegisterAdminUseCase {

    private final AdminRepository adminRepository;
    private final ICommandMapper<RegisterAdminCommand, Admin> adminCommandMapper;

    public RegisterAdminUseCase(AdminRepository adminRepository, ICommandMapper<RegisterAdminCommand, Admin> adminCommandMapper) {
        this.adminRepository = adminRepository;
        this.adminCommandMapper = adminCommandMapper;
    }

    public Admin register(RegisterAdminCommand command) throws MalformedCommandException, UserAlreadyExistsException {
        if (!command.validate()) throw new MalformedCommandException();
        if (adminRepository.existsByEmail(command.getEmail())) throw new UserAlreadyExistsException();

        return adminRepository.save(adminCommandMapper.mapToModel(command));
    }


}
