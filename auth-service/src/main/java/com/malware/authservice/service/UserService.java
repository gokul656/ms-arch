package com.malware.authservice.service;

import com.malware.authservice.dao.User;
import com.malware.authservice.dto.ProductDto;
import com.malware.authservice.dto.UserDto;
import com.malware.authservice.external.ProductClient;
import com.malware.authservice.repo.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

@Service
@RequiredArgsConstructor
public class UserService {
    private final UserRepository userRepository;

    private final ProductClient productClient;

    public User addUser(User user) {
        user.setUid(UUID.randomUUID().toString());
        return userRepository.save(user);
    }

    public User getUser(String uid) {
        return userRepository.findByUid(uid);
    }

    public List<UserDto> getAllUsers() {
        return userRepository.findAll().stream().map(this::convertToDto).collect(Collectors.toList());
    }

    public List<ProductDto> getUserProducts(String uid) {
        return productClient.getProducts(uid).getBody();
    }

    public UserDto convertToDto(User user) {
        UserDto userDto = new UserDto();
        BeanUtils.copyProperties(user, userDto);

        return userDto;
    }

}
