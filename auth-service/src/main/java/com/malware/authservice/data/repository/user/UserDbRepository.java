package com.malware.authservice.data.repository.user;

import com.malware.authservice.data.dao.JpaUser;
import com.malware.authservice.data.domain.user.User;
import com.malware.authservice.data.domain.user.UserRepository;
import com.malware.authservice.factory.IEntityMapper;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class UserDbRepository implements UserRepository {

    private final IEntityMapper<JpaUser, User> userEntityMapper;
    private final UserJpaRepository userRepository;

    public UserDbRepository(IEntityMapper<JpaUser, User> userEntityMapper, UserJpaRepository userRepository) {
        this.userEntityMapper = userEntityMapper;
        this.userRepository = userRepository;
    }

    @Override
    public Optional<User> findByUID(String uid) {
        return userRepository.findByUid(uid).map(userEntityMapper::mapToModel);
    }

    @Override
    public Optional<User> findByEmail(String email) {
        return userRepository.findByEmail(email).map(userEntityMapper::mapToModel);
    }

    @Override
    public User save(User user) {
        JpaUser jpaUser = userEntityMapper.mapToEntity(user);
        JpaUser saved = userRepository.save(jpaUser);

        return userEntityMapper.mapToModel(saved);
    }

    @Override
    public List<User> findAll() {
        return userRepository.findAll()
                .stream()
                .parallel()
                .map(userEntityMapper::mapToModel)
                .collect(Collectors.toList());
    }
}
