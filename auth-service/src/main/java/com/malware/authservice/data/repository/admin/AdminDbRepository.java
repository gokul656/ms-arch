package com.malware.authservice.data.repository.admin;

import com.malware.authservice.data.dao.JpaAdmin;
import com.malware.authservice.data.domain.admin.Admin;
import com.malware.authservice.data.domain.admin.AdminRepository;
import com.malware.authservice.factory.IEntityMapper;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class AdminDbRepository implements AdminRepository {

    private final IEntityMapper<JpaAdmin, Admin> entityMapper;
    private final AdminJpaRepository adminRepository;

    public AdminDbRepository(IEntityMapper<JpaAdmin, Admin> entityMapper, AdminJpaRepository adminRepository) {
        this.entityMapper = entityMapper;
        this.adminRepository = adminRepository;
    }

    @Override
    public Optional<Admin> findByUid(String uid) {
        return adminRepository.findByUid(uid).map(entityMapper::mapToModel);
    }

    @Override
    public Optional<Admin> findByEmail(String email) {
        return adminRepository.findByEmail(email).map(entityMapper::mapToModel);
    }

    @Override
    public Admin save(Admin admin) {
        JpaAdmin jpaAdmin = entityMapper.mapToEntity(admin);
        JpaAdmin saved = adminRepository.save(jpaAdmin);

        return entityMapper.mapToModel(saved);
    }

    @Override
    public List<Admin> findAll() {
        return adminRepository.findAll()
                .stream()
                .parallel()
                .map(entityMapper::mapToModel)
                .collect(Collectors.toList());
    }

    @Override
    public boolean existsByEmail(String email) {
        return adminRepository.existsByEmail(email);
    }
}
