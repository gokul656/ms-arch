package com.malware.authservice.repo;

import com.fasterxml.jackson.databind.util.BeanUtil;
import com.malware.authservice.dao.JpaUser;
import com.malware.authservice.domain.model.User;
import com.malware.authservice.factory.IUserRepository;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class SQLRepository implements IUserRepository {

    private final JPAUserRepository userRepository;

    public SQLRepository(JPAUserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @Override
    public Optional<User> findByUID(String uid) {
        Optional<JpaUser> optionalUser = userRepository.findByUid(uid);
        if (optionalUser.isEmpty()) return Optional.empty();

        JpaUser user = optionalUser.get();
        return Optional.of(new User(user.getEmail(), user.getPassword()));
    }

    @Override
    public Optional<User> findByEmail(String email) {
        Optional<JpaUser> optionalUser = userRepository.findByEmail(email);
        if (optionalUser.isEmpty()) return Optional.empty();

        JpaUser user = optionalUser.get();
        return Optional.of(new User(user.getEmail(), user.getPassword()));
    }

    @Override
    public User save(User user) {
        JpaUser jpaUser = new JpaUser();
        BeanUtils.copyProperties(user, jpaUser);
        userRepository.save(jpaUser);

        return user;
    }

    @Override
    public List<User> findAll() {
        return null;
    }
}
